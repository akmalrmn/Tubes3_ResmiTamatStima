using Microsoft.Extensions.Configuration;
using System.IO;
using Tubes3_ResmiTamatStima.Data;
using Tubes3_ResmiTamatStima.Algorithms;
using System.Threading.Tasks;
using System.Diagnostics;

namespace Tubes3_ResmiTamatStima
{
    internal static class Program
    {
        /// <summary>
        ///  The main entry point for the application.
        /// </summary>
        /// 
        [STAThread]
        static void Main()
        {
            MainAsync().GetAwaiter().GetResult();
        }
        static async Task MainAsync()
        {
            // To customize application configuration such as set high DPI settings or default font,
            // see https://aka.ms/applicationconfiguration.
            ApplicationConfiguration.Initialize();

            var configuration = new ConfigurationBuilder()
                .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
                .AddJsonFile("appsettings.json", optional: false, reloadOnChange: true)
                .Build();

            await DBUtilities.InitializeAndTestDBAsync(configuration);

            // Get the data from the database
            List<string> data = await DBUtilities.GetDataFromDB(configuration);

            // Create an instance of the BoyerMoore class
            BoyerMoore boyerMoore = new BoyerMoore();

            string pattern = "Qk1GDgAAAAAAADYAAAAoAAAAHgAAAB4AAAABACAAAAAAAAAAAADDDgAAww4AAAAAAAAAAAAAoKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////oKCg/2lpaf9paWn/aWlp/2lpaf9paWn/aWlp/2lpaf9paWn/aWlp/2lpaf9paWn/aWlp/2lpaf9paWn/aWlp/2lpaf9paWn/aWlp/2lpaf9paWn/aWlp/2lpaf9paWn/aWlp/2lpaf9paWn/aWlp/2lpaf9paWn/oKCg/6CgoP+goKD/oKCg/6CgoP+goKD/oKCg/6CgoP+goKD/oKCg/6CgoP+goKD/oKCg/6CgoP+goKD/oKCg/6CgoP+goKD/oKCg/6CgoP+goKD/oKCg/6CgoP+goKD/oKCg/6CgoP+goKD/oKCg/6CgoP+goKD/";

            Stopwatch stopwatchmain = new Stopwatch();
            stopwatchmain.Start();
            // Perform string matching on each item in the data
            foreach (string text in data)
            {
                Stopwatch stopwatch = new Stopwatch();

                // Start the stopwatch before the search
                stopwatch.Start();

                // Search for pattern in text
                List<int> occurrences = boyerMoore.Search(text, pattern);

                // Stop the stopwatch after the search
                stopwatch.Stop();

                // Get the elapsed time
                TimeSpan elapsedTime = stopwatch.Elapsed;

                System.Diagnostics.Debug.WriteLine($"Time taken for Boyer-Moore search: {elapsedTime.TotalMilliseconds} ms");

                if (occurrences.Count > 0)
                {
                    System.Diagnostics.Debug.WriteLine($"Found {occurrences.Count} occurrences of '{pattern}' in text. Similarity: 100%");
                }
                else
                {
                    System.Diagnostics.Debug.WriteLine($"No exact match found for '{pattern}' in text. Calculating similarity...");

                    // Start the stopwatch before the Levenshtein distance calculation
                    stopwatch.Restart();

                    // Calculate Levenshtein Distance
                    int distance = boyerMoore.CalculateLevenshteinDistance(text, pattern);

                    // Stop the stopwatch after the Levenshtein distance calculation
                    stopwatch.Stop();

                    // Get the elapsed time
                    elapsedTime = stopwatch.Elapsed;

                    System.Diagnostics.Debug.WriteLine($"Time taken for Levenshtein distance calculation: {elapsedTime.TotalMilliseconds} ms");

                    // Calculate similarity percentage
                    int maxLength = Math.Max(text.Length, pattern.Length);
                    double similarity = (maxLength - distance) / (double)maxLength;
                    System.Diagnostics.Debug.WriteLine($"Similarity: {similarity * 100}%");
                }
            }
            stopwatchmain.Stop();
            TimeSpan elapsedTimemain = stopwatchmain.Elapsed;

            System.Diagnostics.Debug.WriteLine($"Total time: {elapsedTimemain.TotalMilliseconds} ms");

            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new Form1());
        }
    }
}
